- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpc variables
      include_vars: vars/vpc_setup

    - name: creat v profile vpc
      ec2_vpc_net:
         name: "{{vpc_name}}"
         cidr_block: "{{vpcCidr}}"
         region: "{{region}}"
         dns_support: yes
         dns_hostnames: yes
         tenancy: default
         state: "{{state}}"
      register: vpcout            ## to print and save output variable
    
        #    - debug:
        #        vars: vpcout

    - name: creat public subnet 1 in AZ 1
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone1}}"
         state: "{{state}}"
         cidr: "{{PubSub1Cidr}}"
         map_public: yes
         resource_tags:
            Name: vprofile-pubsub1
      register: pubsub1_out

    - name: creat public subnet 2 in AZ 2
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone2}}"
         state: "{{state}}"
         cidr: "{{PubSub2Cidr}}"
         map_public: yes
         resource_tags:
            Name: vprofile-pubsub2
      register: pubsub2_out

    - name: creat public subnet 3 in AZ 3
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone3}}"
         state: "{{state}}"
         cidr: "{{PubSub3Cidr}}"
         map_public: yes
         resource_tags:
            Name: vprofile-pubsub3
      register: pubsub3_out

    - name: creat private subnet 1 in AZ 1
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone1}}"
         state: "{{state}}"
         cidr: "{{PrivSub1Cidr}}"
         resource_tags:
            Name: vprofile-privsub1
      register: privsub1_out

    - name: creat private subnet 2 in AZ 2
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone2}}"
         state: "{{state}}"
         cidr: "{{PrivSub2Cidr}}"
         resource_tags:
            Name: vprofile-privsub2
      register: privsub2_out

    - name: creat private subnet 3 in AZ 3
      ec2_vpc_subnet:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         az: "{{zone3}}"
         state: "{{state}}"
         cidr: "{{PrivSub3Cidr}}"
         resource_tags:
            Name: vprofile-privsub3
      register: privsub3_out

    - name: IGW setup 
      ec2_vpc_igw:
         vpc_id: "{{vpcout.vpc.id}}"
         state: "{{state}}"
         region: "{{region}}"
         resource_tags:
           Name: vprofile-igw  
      register: igw_out
    
    - name: Set up public subnet route table
      ec2_vpc_route_table:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         tags:
           Name: vprofile_pubRT
         subnets:
           - "{{ pubsub1_out.subnet.id }}"
           - "{{ pubsub2_out.subnet.id }}"
           - "{{ pubsub3_out.subnet.id }}"
         routes:
           - dest: 0.0.0.0/0
             gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out

    - debug:
        var: pubRT_out

    - name: Create new NGT and asigne new EIP         ## we only creat one netgate way because its charges is high 
      ec2_vpc_nat_gateway:
         state: "{{state}}"
         subnet_id: "{{pubsub1_out.subnet.id}}"
         wait: yes
         region: "{{region}}"
         if_exist_do_not_create: true                  ## to make module idempotent  (ni execute again and again)
      register: NGW_out

    - debug: 
        var: NGW_out


    - name: Set up private subnet route table
      ec2_vpc_route_table:
         vpc_id: "{{vpcout.vpc.id}}"
         region: "{{region}}"
         tags:
           Name: vprofile_privRT
         subnets:                                     ## we have to put private subnet value
           - "{{ privsub1_out.subnet.id }}"
           - "{{ privsub2_out.subnet.id }}"
           - "{{ privsub3_out.subnet.id }}"
         routes:
           - dest: 0.0.0.0/0
             gateway_id: "{{NGW_out.nat_gateway_id }}"  ## give NGW id 
      register: privRT_out

    - debug: 
        var: privRT_out    
    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id 
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id  
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id 
        - pubRT_out.route_table.id
        - NGW_out.nat_gateway_id
        - privRT_out.route_table.id

    - set_fact:
         vpcid: "{{vpcout.vpc.id}}"
         pubsub1id: "{{pubsub1_out.subnet.id}}"
         pubsub2id: "{{pubsub2_out.subnet.id}}"
         pubsub3id: "{{pubsub3_out.subnet.id}}"
         privsub1id: "{{privsub1_out.subnet.id}}"
         privsub2id: "{{privsub2_out.subnet.id}}"
         privsub3id: "{{privsub3_out.subnet.id}}"
         igwid: "{{igw_out.gateway_id}}"
         pubRTid: "{{pubRT_out.route_table.id}}"
         NATGWid: "{{NGW_out.nat_gateway_id}}"
         privRTid: "{{privRT_out.route_table.id}}" 
         cacheable: yes

    - name: creat a variable file for vpc out
      copy:
        content: "vpcid: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\npubRTid: {{pubRT_out.route_table.id}}\nNATGWid: {{NGW_out.nat_gateway_id}}\nprivRTid: {{privRT_out.route_table.id}} "
        dest: vars/output_vars
